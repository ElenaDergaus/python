# coding : utf-8
# lesson 7 exercise 1


# 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
# который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
#
# 31    32         3    5    32        3    5    8    3
# 37    43         2    4    6         8    3    7    1
# 51    86        -1   64   -8
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц).
# Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем
# с первым элементом первой строки второй матрицы и т.д.


class Matrix:
    def __init__(self, mtrlist):
        self.mat = mtrlist

    def __str__(self):
        c = ''
        for i in self.mat:
            b = list(map(str, i))
            b = ' '.join(b)
            c = c + b + '\n'
        return c

    def __add__(self, other):
        if len(self.mat) != len(other.mat):
            print("Матрицы должны быть одинакового размера!")
            return

        if len(self.mat[0]) != len(other.mat[0]):
            print("Матрицы должны быть одинакового размера!")
            return

        c = [[0 for i in range(len(self.mat[0]))] for j in range(len(self.mat))]

        for i, iel in enumerate(self.mat):
            for j, jel in enumerate(iel):
                c[i][j] = self.mat[i][j] + other.mat[i][j]

        return Matrix(c)


a = [[1, 2, 3], [4, 5, 6]]

b = [[12, 13, 14], [0, -1, -2]]

mtrx1 = Matrix(a)
print(mtrx1)
mtrx2 = Matrix(b)
print(mtrx2)
print(mtrx1 + mtrx2)
